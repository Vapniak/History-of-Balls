[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://ceha4blayegg1"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_l42dl"]
parameter_name = "Texture"
texture_type = 1
color_default = 2

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_f8xfy"]
output_port_for_preview = 0
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeCompare" id="VisualShaderNodeCompare_df8r6"]
default_input_values = [0, 0.0, 1, 0.4, 2, 1e-05]
function = 4

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_v1urq"]
default_input_values = [1, Vector2(5, 5), 2, Vector2(0, 0)]
function = 1

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_oah6q"]
default_input_values = [0, 0.0, 1, 0.2]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_qjgwf"]
constant = Color(0, 0, 0, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D Texture : source_color, hint_default_transparent;



void fragment() {
// ColorConstant:8
	vec4 n_out8p0 = vec4(0.000000, 0.000000, 0.000000, 1.000000);


// UVFunc:6
	vec2 n_in6p1 = vec2(5.00000, 5.00000);
	vec2 n_in6p2 = vec2(0.00000, 0.00000);
	vec2 n_out6p0 = (UV - n_in6p2) * n_in6p1 + n_in6p2;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Texture, n_out6p0);


// Compare:5
	float n_in5p1 = 0.40000;
	bool n_out5p0 = n_out4p0.x < n_in5p1;


// FloatOp:7
	float n_in7p1 = 0.20000;
	float n_out7p0 = (n_out5p0 ? 1.0 : 0.0) * n_in7p1;


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out7p0;


}
"
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_l42dl")
nodes/fragment/3/position = Vector2(-1200, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_f8xfy")
nodes/fragment/4/position = Vector2(-480, 60)
nodes/fragment/5/node = SubResource("VisualShaderNodeCompare_df8r6")
nodes/fragment/5/position = Vector2(-160, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeUVFunc_v1urq")
nodes/fragment/6/position = Vector2(-780, 40)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_oah6q")
nodes/fragment/7/position = Vector2(120, 200)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_qjgwf")
nodes/fragment/8/position = Vector2(100, 60)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 5, 0, 6, 0, 4, 0, 5, 0, 7, 0, 7, 0, 0, 1, 8, 0, 0, 0)
